def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion 29

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    lintOptions {
        disable 'InvalidPackage'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.hack2s.flucompy"
        minSdkVersion 16
        targetSdkVersion 29
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    signingConfigs {
        debug {
            storeFile file(getSignFile('debug.properties'))
            println "**********" + getStoreFile().getName() + "*********"
            storePassword getSignFilePassword('debug.properties')
            keyAlias getSignAlias('debug.properties')
            keyPassword getSignAliasPassword('debug.properties')
        }

        release {
            storeFile file(getSignFile('release.properties'))
            println "**********" + getStoreFile().getName() + "*********"
            storePassword getSignFilePassword('release.properties')
            keyAlias getSignAlias('release.properties')
            keyPassword getSignAliasPassword('release.properties')
        }
    }

    buildTypes {
        debug{
            applicationIdSuffix = ".debug"
            minifyEnabled true
            debuggable true
            signingConfig signingConfigs.debug
        }
        release {
            minifyEnabled true
            debuggable false
            shrinkResources true
            signingConfig signingConfigs.release
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}
